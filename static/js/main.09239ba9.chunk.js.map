{"version":3,"sources":["Components/Calculator.js","index.js"],"names":["Calculator","props","state","expression","result","cleanExpression","replace","split","i","length","indexOf","splice","join","this","noOperatorSequences","pedmas","a","b","operator","exp","parseFloat","r","operate","key","setState","compute","match","ids","numbers","push","id","className","onClick","press","bind","drawNumbers","React","Component","App","ReactDOM","render","$"],"mappings":"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","file":"static/js/main.09239ba9.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Calculator extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expression: '0',\n      result: 0\n    }\n  }\n\n  noOperatorSequences (expression) {\n    let cleanExpression = expression\n    cleanExpression = cleanExpression.replace('  ', ' ')\n    cleanExpression = cleanExpression.split(' ')\n    for (let i = 0; i < cleanExpression.length; i++) {\n      if (['x', '/', '+', '-'].indexOf(cleanExpression[i]) !== -1 &&\n          ['x', '/', '+', '-'].indexOf(cleanExpression[i + 1]) !== -1) {\n        cleanExpression.splice(i, 1)\n        i--\n      }\n    }\n    cleanExpression = cleanExpression.join(' ')\n    return cleanExpression\n  }\n\n  compute () {\n    let expression = this.noOperatorSequences(this.state.expression)\n    expression = expression.split(' ')\n    expression = this.pedmas(expression)\n    return expression[0]\n  }\n\n  operate (a, b, operator) {\n    switch (operator) {\n      case '/':\n        return a / b\n      case 'x':\n        return a * b\n      case '+':\n        return a + b\n      case '-':\n        return a - b\n    }\n  }\n\n  pedmas (expression) {\n    const exp = expression\n    for (let i = 0; i < exp.length; i++) {\n      if (['/', 'x', '+', '-'].indexOf(exp[i]) !== -1) {\n        const a = parseFloat(exp[i - 1])\n        const b = parseFloat(exp[i + 1])\n        const r = this.operate(a, b, exp[i])\n        exp.splice(i - 1, 3, r)\n        i--\n      }\n    }\n    return exp\n  }\n\n  press (key) {\n    switch (key) {\n      case 'clear':\n        this.setState({\n          expression: '0',\n          result: 0\n        })\n        return\n      case 'equals':\n        this.setState({\n          result: this.compute(),\n          expression: this.state.result\n        })\n        return\n      case '.':\n        if (this.state.expression.match(/\\.\\d+$|\\.$/) !== null ||\n            this.state.expression.match(/\\d$/) === null) {\n          return\n        }\n        break\n      case 0:\n        if (!this.state.expression.match(/[1-9]+(0*|\\.*)$| $|\\.$/)) {\n          return\n        }\n        break\n      case '/':\n      case 'x':\n      case '+':\n      case '-':\n        if (this.state.expression === '0') {\n          key = this.state.expression + ' ' + key\n        } else {\n          key = ' ' + key + ' '\n        }\n        break\n    }\n    let expression = null\n    if (this.state.expression === '0' && key !== '.') {\n      expression = '' + key\n    } else {\n      expression = this.state.expression + key\n    }\n    this.setState({\n      expression: expression,\n      result: expression\n    })\n  }\n\n  drawNumbers () {\n    const ids =\n    [\n      'zero', 'one', 'two',\n      'three', 'four', 'five',\n      'six', 'seven', 'eight', 'nine'\n    ]\n    const numbers = []\n    for (let i = 0; i < 10; i++) {\n      numbers.push(\n        <button\n          id={ids[i]}\n          className={ids[i] + ' button'}\n          onClick={this.press.bind(this, i)}\n        >\n          {i}\n        </button>)\n    }\n\n    return (\n      <>\n        {numbers}\n      </>\n    )\n  }\n\n  render () {\n    return (\n      <div id='calculator' className='calculator'>\n        <div id='screen' className='screen'>\n          <p id='input' className='screen__input'>{this.state.expression}</p>\n          <p id='display' className='screen__result'>\n            {this.state.result}\n          </p>\n        </div>\n        <div id='panel' className='panel'>\n          <button\n            id='clear'\n            className='clear button button--clear'\n            onClick={this.press.bind(this, 'clear')}\n          >\n            AC\n          </button>\n          {this.drawNumbers()}\n          <button\n            id='equals'\n            className='equals button button--equal'\n            onClick={this.press.bind(this, 'equals')}\n          >\n            =\n          </button>\n          <button\n            id='add'\n            className='add button button--operator'\n            onClick={this.press.bind(this, '+')}\n          >\n              +\n          </button>\n          <button\n            id='subtract'\n            className='subtract button button--operator'\n            onClick={this.press.bind(this, '-')}\n          >\n              -\n          </button>\n          <button\n            id='divide'\n            className='divide button button--operator'\n            onClick={this.press.bind(this, '/')}\n          >\n            /\n          </button>\n          <button\n            id='multiply'\n            className='multiply button button--operator'\n            onClick={this.press.bind(this, 'x')}\n          >\n            x\n          </button>\n          <button\n            id='decimal'\n            className='decimal button'\n            onClick={this.press.bind(this, '.')}\n          >\n            .\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport $ from 'jquery'\nimport './style.css'\nimport Calculator from './Components/Calculator.js'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <div className='app'>\n        <Calculator />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, $('#root')[0])\n"],"sourceRoot":""}